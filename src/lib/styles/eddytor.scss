
@use 'sass:map';
@use '_variables' as *;



:global(html) {
  height: 100%;
  font-family: $font-family-primary;
}

:global(body) {
  margin: 0;
  height: 100%;
  background: map.get($light, 'bg-primary');
  color: map.get($light, 'text-primary');
  transition: all $transition-slower;
  font-family: $font-family-primary;
  line-height: $line-height-normal;
}

:global(body.dark) {
  background: map.get($dark, 'bg-primary');
  color: map.get($dark, 'text-primary');
}

.eddytor-app {
  height: 100%;
  display: flex;
  flex-direction: column;
  background: map.get($light, 'bg-primary');
  transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1);


&.dark {
  background: map.get($dark, 'bg-primary');
}
 

  .theme-toggle-btn {
    position: fixed;
    top: $spacing-6;
    right: $spacing-6;
    z-index: $z-tooltip;
    display: flex;
    align-items: center;
    gap: $spacing-2;
    padding: $spacing-3 $spacing-5;
    background: rgba(map.get($light, 'bg-primary'), 0.9);
    color: map.get($light, 'text-primary');
    border: 1px solid map.get($light, 'border-medium');
    border-radius: $radius-xl;
    cursor: pointer;
    font-weight: $font-weight-medium;
    font-size: $font-size-sm;
    font-family: $font-family-primary;
    backdrop-filter: blur(8px);
    box-shadow: $shadow-md;
    transition: all $transition-base;
    
    &:hover {
      background: map.get($light, 'bg-primary');
      transform: translateY(-1px);
      box-shadow: $shadow-lg;
    }

    .toggle-icon {
      font-size: 1rem;
    }
  }

  &.dark .theme-toggle-btn {
    background: rgba(map.get($dark, 'bg-tertiary'), 0.9);
    color: map.get($dark, 'text-primary');
    border-color: map.get($dark, 'border-strong');

    &:hover {
      background: map.get($dark, 'bg-tertiary');
    }
  }
}

.editor-main {
  flex: 1;
  display: flex;
  justify-content: center;
  overflow: auto;
  min-height: 100vh;
  padding: 0;
  margin: 0;
}

.editor-container {
  width: 100%;
  min-height: 100%;
  
  margin: 0;
  padding: 0;
}

.editor-wrapper {
  position: relative;
 

  height: 100%;
  min-height: 100vh;
  transition: all $transition-slower;
  overflow: hidden;



  @media (min-width: 768px) {
    margin: 2rem 1rem;
    min-height: calc(100vh - 4rem);
  }

  @media (max-width: 767px) {
    border-radius: 0;
    box-shadow: none;
    .dark & {
      box-shadow: none;
    }
  }
}

.title-section {
  padding: $spacing-12 $spacing-16 0;

  transition: border-color $transition-base;

  .dark & {
    border-bottom-color: map.get($dark, 'border-medium');
  }

  @media (max-width: 768px) {
    padding: 2rem 2rem 0;
  }
}

.editor-section {
  position: relative;
  padding-left: 60px; // Space for plus button
}

.editor {
  height: 100%;
  min-height: 60vh;
  outline: none;
  line-height: $line-height-relaxed;
  color: map.get($light, 'text-primary');
  font-size: $font-size-lg;
  font-family: $font-family-primary;
  transition: color $transition-base;
  padding: $spacing-12 $spacing-16;
  box-sizing: border-box;
  padding-left: 0; // Remove left padding since wrapper has it

  .dark & {
    color: map.get($dark, 'text-primary');
  }

  @media (max-width: 768px) {
    padding: 2rem 2rem;
    padding-left: 0;
    font-size: 1rem;
  }
  
 

  :global(h2) {
    font-size: $font-size-3xl;
    font-weight: $font-weight-semibold;
    line-height: 1.3;
    margin: $spacing-6 0 $spacing-4 0;
    color: map.get($light, 'text-primary');
    font-family: $font-family-heading;
    position: relative;
    
    :global(.dark) & {
      color: map.get($dark, 'text-primary');
    }

    &:hover {
      border-radius: $radius-lg;
      margin-left: -$spacing-4;
      margin-right: -$spacing-4;
      padding-left: $spacing-4;
      padding-right: $spacing-4;
    }
  }

  :global(h3) {
    font-size: $font-size-2xl;
    font-weight: $font-weight-semibold;
    line-height: 1.4;
    margin: $spacing-5 0 $spacing-3 0;
    color: map.get($light, 'text-primary');
    font-family: $font-family-heading;
    position: relative;
    
    :global(.dark) & {
      color: map.get($dark, 'text-primary');
    }

    &:hover {
      border-radius: $radius-lg;
      margin-left: -$spacing-4;
      margin-right: -$spacing-4;
      padding-left: $spacing-4;
      padding-right: $spacing-4;
    }
  }

  :global(strong) {
    font-weight: $font-weight-semibold;
    color: map.get($light, 'text-primary');

    .dark & {
      color: map.get($dark, 'text-primary');
    }
  }

  :global(em) {
    font-style: italic;
    color: map.get($light, 'text-muted');

    .dark & {
      color: map.get($dark, 'text-muted');
    }
  }

  :global(code) {
    font-family: $font-family-mono;
    font-size: 0.875em;
    background: map.get($light, 'bg-tertiary');
    padding: $spacing-1 $spacing-2;
    border-radius: $radius-md;
    color: map.get($light, 'error');
    border: 1px solid map.get($light, 'border-medium');

    .dark & {
      background: map.get($dark, 'bg-secondary');
      color: map.get($dark, 'error');
      border-color: map.get($dark, 'border-strong');
    }
  }

  :global(blockquote) {
    margin: $spacing-6 0;
    padding: 0 $spacing-6;
    border-left: 4px solid map.get($light, 'accent-primary');
    color: map.get($light, 'text-muted');
    font-style: italic;
    position: relative;
    background: rgba(map.get($light, 'accent-primary'), 0.05);
    border-radius: 0 $radius-lg $radius-lg 0;
    padding: $spacing-4 $spacing-6;

    .dark & {
      border-left-color: map.get($dark, 'accent-primary');
      color: map.get($dark, 'text-muted');
      background: rgba(map.get($dark, 'accent-primary'), 0.1);
    }
  }

  :global(ul), :global(ol) {
    padding-left: $spacing-6;
    margin: $spacing-4 0;
    position: relative;
  }

  :global(li) {
    margin: $spacing-2 0;
  }

  // Enhanced selection styling
  :global(::selection) {
    background: rgba(map.get($light, 'accent-primary'), 0.2);
  }

  .dark & :global(::selection) {
    background: rgba(map.get($dark, 'accent-primary'), 0.3);
  }
}
